@model UI.MVC.Models.ContactFormViewModel

@{
    ViewBag.Title = "Contact Us";
}

<h2>Contact Us</h2>
<hr />
<div class="row g-5">
    <div class="col-md-6">
        <img src="https://picsum.photos/800/600" class="img-fluid rounded" />
    </div>
    <div class="col-md-6">
        @using (Html.BeginForm())
        {
            @Html.AntiForgeryToken()
            @Html.ValidationSummary(true, "", new { @class = "text-danger" })
            <div class="row g-3">
                <div class="col-md-4">
                    <div class="form-floating">
                        @Html.EditorFor(model => model.Firstname, new { htmlAttributes = new { @class = "form-control shadow-sm", @placeholder = Html.DisplayNameFor(model => model.Firstname) } })
                        @Html.LabelFor(model => model.Firstname, htmlAttributes: new { @class = "control-label" })
                        @Html.ValidationMessageFor(model => model.Firstname, "", new { @class = "text-danger" })
                    </div>
                </div>
                <div class="col-md-4">
                    <div class="form-floating">
                        @Html.EditorFor(model => model.Lastname, new { htmlAttributes = new { @class = "form-control shadow-sm", @placeholder = Html.DisplayNameFor(model => model.Lastname) } })
                        @Html.LabelFor(model => model.Lastname, htmlAttributes: new { @class = "control-label" })
                        @Html.ValidationMessageFor(model => model.Lastname, "", new { @class = "text-danger" })
                    </div>
                </div>
                <div class="col-md-4">
                    <div class="form-floating">
                        @Html.EditorFor(model => model.EMail, new { htmlAttributes = new { @class = "form-control shadow-sm", @placeholder = Html.DisplayNameFor(model => model.EMail) } })
                        @Html.LabelFor(model => model.EMail, htmlAttributes: new { @class = "control-label" })
                        @Html.ValidationMessageFor(model => model.EMail, "", new { @class = "text-danger" })
                    </div>
                </div>
                <div class="col-md-6">
                    <div class="form-floating">
                        @Html.EditorFor(model => model.Subject, new { htmlAttributes = new { @class = "form-control shadow-sm", @placeholder = Html.DisplayNameFor(model => model.Subject) } })
                        @Html.LabelFor(model => model.Subject, htmlAttributes: new { @class = "control-label col-md-2" })
                        @Html.ValidationMessageFor(model => model.Subject, "", new { @class = "text-danger" })
                    </div>
                </div>
                <div class="col-md-6">
                    <div class="form-floating">
                        @Html.EnumDropDownListFor(model => model.Type, new { @class = "form-select shadow-sm", @placeholder = Html.DisplayNameFor(model => model.Type) })
                        @Html.LabelFor(model => model.Type, htmlAttributes: new { @class = "control-label col-md-2" })
                        @Html.ValidationMessageFor(model => model.Type, "", new { @class = "text-danger" })
                    </div>
                </div>
                <div class="col-md-12">
                    <div class="form-floating">
                        @Html.EditorFor(model => model.Message, new { htmlAttributes = new { @class = "form-control shadow-sm", @placeholder = Html.DisplayNameFor(model => model.Message) } })
                        @Html.LabelFor(model => model.Message, htmlAttributes: new { @class = "control-label col-md-2" })
                        @Html.ValidationMessageFor(model => model.Message, "", new { @class = "text-danger" })
                    </div>
                </div>
                <div class="col-md-12">
                    <button type="submit" class="btn btn-outline-dark btn-sm shadow-sm">Submit</button>
                </div>
            </div>
        }
    </div>
</div>
